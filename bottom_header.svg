<!DOCTYPE html>
<html>
<head>
  <style>
    svg {
      width: 100vw;
      position: fixed;
      top: -5px;
      transform: rotate(360deg);
      overflow: visible;
    }
    
    .wave {
      animation: wave 3s linear;
      animation-iteration-count: infinite;
      fill: #4478e3;  
    }
    
    .wave:hover {
      fill: #0066cc;
    }
    
    #wave2 {
      animation-duration: 5s;
      animation-direction: reverse;
      opacity: .6;
    }
    
    #wave3 {
      animation-duration: 7s;
      opacity: .3;
    }
    
    @keyframes wave {
      to {transform: translateX(-100%);}
    }
    
    @keyframes colorChange {
      0% { fill: #4478e3; }
      25% { fill: #44e37b; }
      50% { fill: #e34444; }
      75% { fill: #e3c844; }
      100% { fill: #4478e3; }
    }
  </style>
</head>
<body>
  <svg viewBox="0 0 115 25" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <defs> 
      <filter id="goo">
        <feGaussianBlur in="SourceGraphic" stdDeviation="1" result="blur" />
        <feColorMatrix in="blur" mode="matrix" values="
             1 0 0 0 0  
             0 1 0 0 0  
             0 0 1 0 0  
             0 0 0 13 -9" result="goo" />
        <feBlend in="SourceGraphic" in2="goo" />
      </filter>
      <path id="wave" d="M 0,10 C 30,10 30,15 60,15 90,15 90,10 120,10 150,10 150,15 180,15 210,15 210,10 240,10 v 28 h -240 z" />
    </defs> 
    <use id="wave3" class="wave" xlink:href="#wave" x="0" y="-2"></use> 
    <use id="wave2" class="wave" xlink:href="#wave" x="0" y="0"></use>
    <svg height="30" width="200" xmlns:xlink="http://www.w3.org/1999/xlink">
      <a xlink:href="https://github.com/Trilokia" target="_top">
        <text y="39" font-family="Times, serif" fill="grey" font-size="1px">
          @Trilokia
        </text>
      </a>
    </svg>
  </svg>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Apply the color change animation to all waves
      const waves = document.querySelectorAll('.wave');
      
      waves.forEach((wave, index) => {
        // Add color change animation with different durations for each wave
        wave.style.animation = `wave 3s linear infinite, colorChange ${5 + index*2}s linear infinite`;
        
        // Override specific wave properties
        if (wave.id === 'wave2') {
          wave.style.animationDirection = 'reverse, normal';
        }
      });
      
      // Add click handler to toggle animations
      document.querySelector('svg').addEventListener('click', function() {
        waves.forEach(wave => {
          if (wave.style.animationPlayState === 'paused') {
            wave.style.animationPlayState = 'running';
          } else {
            wave.style.animationPlayState = 'paused';
          }
        });
      });
    });
  </script>
</body>
</html>
